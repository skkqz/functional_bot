from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import CallbackQuery

from loader import dp, logger
from api.api import get_photo_fox
from keyboards.inline.btn_more import choice


@dp.message_handler(Command('cute_fox'))
async def command_cute_fox(message: types.Message) -> None:
    """–í—ã–≤–æ–¥ —Å–ª—É—á–∞–π–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ª–∏—Å–∏—á–∫–∏"""

    try:
        result = get_photo_fox()
        await message.answer_photo(photo=result['image'], caption='ü¶äüòç', reply_markup=choice)
    except (Exception, TimeoutError) as _ex:
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –ø–æ–∑–∂–µ.')
        logger.error(f'–û—à–∏–±–∫–∞: {_ex}')


@dp.callback_query_handler(text_contains='more')
async def more_photo_fox(call: CallbackQuery) -> None:

    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–æ–π inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""

    # –£–¥–∞–ª—è–µ—Ç inline –∫–Ω–æ–ø–∫—É, –Ω–∞—Ö–æ–¥—è—â—É—é—Å—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    await call.message.delete_reply_markup()
    await command_cute_fox(call.message)
